[{"C:\\moon\\moon2\\test-app\\src\\index.js":"1","C:\\moon\\moon2\\test-app\\src\\App.js":"2","C:\\moon\\moon2\\test-app\\src\\reportWebVitals.js":"3","C:\\moon\\moon2\\test-app\\src\\pages\\Main.js":"4","C:\\moon\\moon2\\test-app\\src\\Contract\\UserList.js":"5","C:\\moon\\moon2\\test-app\\src\\router.js":"6","C:\\moon\\moon2\\test-app\\src\\pages\\mem.js":"7","C:\\moon\\moon2\\test-app\\src\\Contract\\Context.js":"8","C:\\moon\\moon2\\test-app\\src\\pages\\help.js":"9"},{"size":166,"mtime":1614365433035,"results":"10","hashOfConfig":"11"},{"size":628,"mtime":1617452400864,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":24766,"mtime":1617441180172,"results":"14","hashOfConfig":"11"},{"size":7492,"mtime":1617027484177,"results":"15","hashOfConfig":"11"},{"size":533,"mtime":1617351577441,"results":"16","hashOfConfig":"11"},{"size":3828,"mtime":1617452302957,"results":"17","hashOfConfig":"11"},{"size":134,"mtime":1615833545343,"results":"18","hashOfConfig":"11"},{"size":6990,"mtime":1617434356329,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12d7ii3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\moon\\moon2\\test-app\\src\\index.js",[],["43","44"],"C:\\moon\\moon2\\test-app\\src\\App.js",[],"C:\\moon\\moon2\\test-app\\src\\reportWebVitals.js",[],["45","46"],"C:\\moon\\moon2\\test-app\\src\\pages\\Main.js",["47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import React, { useState, useEffect } from 'react'\r\nimport { UseContext } from '../Contract/Context'\r\nimport icon from '../email.svg'\r\nimport vhod from '../vhod.svg'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport nazad from '../nazad.svg'\r\nimport razv from '../razv.svg'\r\nimport sver from '../sver.svg'\r\n\r\nconst Main = () => {\r\n\r\n    const { web3, Contract } = UseContext()// глобальные переменные\r\n    const [value_acc, setvalue] = useState('')// побочный акк\r\n    const [password, passwords] = useState('')// Логин\r\n    const [number, numberr] = useState('')// Номер\r\n    const [numberi, numbers] = useState('')// Номер\r\n    const [day, days] = useState('')\r\n    const [month, months] = useState('')\r\n    const [year, years] = useState('')\r\n    const [category, categorys] = useState('')// Категория\r\n    const [categoryy, categoryys] = useState('')// Категория\r\n    const [price, prices] = useState('')// Рыночная стоимость\r\n    const [srok, sroks] = useState('')// Срок эксплуатации\r\n    const [answer, answers] = useState('')// y/n\r\n    const [a, a1] = useState('')\r\n    const [b, b1] = useState('')\r\n    const [c, c1] = useState('')\r\n    const [d, d1] = useState('')\r\n    const [i, i1] = useState('')\r\n    const [a_, a2] = useState('')\r\n    const [b_, b2] = useState('')\r\n    const [c_, c2] = useState('')\r\n    const [d_, d2] = useState('')\r\n    const [_number, number3] = useState('')\r\n    const [_a, a3] = useState('')\r\n    const [_b, b3] = useState('')\r\n    const [_c, c3] = useState('')\r\n    const [_number_, number4] = useState('')\r\n    const [text, texts] = useState('')\r\n    const [text2, texts2] = useState('')\r\n    const [number_, number5] = useState('')\r\n    const [results, resultss] = useState('')\r\n    const [resul, result] = useState('')\r\n    const [mo, mo_] = useState('')\r\n    const [zo, zo_] = useState('')\r\n    const [ro, ro_] = useState('')\r\n    const [tr, tr_] = useState('')\r\n    const [l_dps, l_dpss] = useState('')\r\n    const [hh, hhs] = useState('')\r\n    const [hh2, hhs2] = useState('')\r\n    const [hh3, hhs3] = useState('')\r\n    const [g, g1] = useState('')\r\n    const [r, r1] = useState('')\r\n    const [r2, r22] = useState('')\r\n    const [DAT, DAT2] = useState('')\r\n    const [log, logs] = useState('')\r\n\r\n    // Активация \r\n    async function Activation() {\r\n        try {\r\n            let adr = await Contract.methods.Activation(log).call()\r\n            setvalue(adr)\r\n            console.log(adr, password, \"AAAAAAAAAAAAAAAAAAA\")\r\n\r\n            await web3.eth.personal.unlockAccount(adr, password);\r\n\r\n            web3.eth.defaultAccount = adr;\r\n            //\r\n            var result = await Contract.methods.Length_user().call();\r\n            var n;\r\n\r\n            for (var i = 0; i < result; i++) {\r\n                let id_result = await Contract.methods.Info_users(i).call()\r\n                if (id_result[4] == adr) { n = i; }\r\n            }\r\n\r\n            let id = await Contract.methods.Info_users(n).call()\r\n\r\n            if (id[5] == \"client\") {\r\n                mo_(1);\r\n            } else mo_(0);\r\n            if (mo_ == 1 || mo_ == 0) {\r\n                zo_(1);\r\n            } else zo_(0);\r\n\r\n            Info_users(adr);\r\n            Length_massge_client(adr)\r\n            Length_transport(adr)\r\n            lencth_dps();\r\n            Info_ID_card(adr);\r\n            hhs(0);\r\n            hhs2(0);\r\n            hhs3(0);\r\n\r\n        } catch(e) {\r\n            console.log(\"ssss\", e)\r\n            alert('Ошибка авторизации\\nНеправильный логин или пароль!') \r\n        }\r\n    }\r\n\r\n    async function exet() {\r\n        mo_(2); zo_(2);\r\n        a1(\"\"); b1(\"\"); c1(\"\"); d1(\"\"); i1(\"\"); a3(\"\"); b3(\"\"); c3(\"\");\r\n        texts(\"\"); texts2(\"\"); numbers(\"\"); days(\"\"); months(\"\"); years(\"\"); categorys(\"\"); r1(\"\"); DAT2(\"\")\r\n        number4(\"\"); number5(\"\"); number3(\"\");\r\n        passwords(\"\"); logs(\"\")\r\n        g1(0);\r\n    }\r\n\r\n    async function exet2() {\r\n        ro_(1)\r\n    }\r\n\r\n    async function exet3() {\r\n        numberr(\"\"); days(\"\"); months(\"\"); years(\"\"); categorys(\"\");\r\n        ro_(0);\r\n    }\r\n\r\n    async function exet4() {\r\n        tr_(1);\r\n    }\r\n\r\n    async function exet5() {\r\n        categoryys(\"\"); prices(\"\"); sroks(\"\");\r\n        tr_(0);\r\n    }\r\n\r\n    async function rasv1() {\r\n        hhs(1);\r\n    }\r\n\r\n    async function sv1() {\r\n        hhs(0);\r\n    }\r\n\r\n    async function rasv2() {\r\n        hhs2(1);\r\n    }\r\n\r\n    async function sv2() {\r\n        hhs2(0);\r\n    }\r\n\r\n    async function rasv3() {\r\n        hhs3(1);\r\n    }\r\n\r\n    async function sv3() {\r\n        hhs3(0);\r\n    }\r\n    // Зполненение данных водительского удостоверения и проверка ДПС\r\n    async function Entry_ID_card() {\r\n        console.log(web3.eth.defaultAccount, \"\")\r\n        try {\r\n            await Contract.methods.Entry_ID_card(number, day, month, year, category).send({ from: web3.eth.defaultAccount, gas: 1000000 })\r\n            console.log(\"Успешно!\")\r\n            ro_(0)\r\n            Info_ID_card(value_acc)\r\n            Length_massge_client(value_acc)\r\n            numberr(\"\"); days(\"\"); months(\"\"); years(\"\"); categorys(\"\"); r1('')\r\n        } catch { alert('Ошибка, не верно заполненны данные!') }\r\n    }\r\n\r\n    async function A() {\r\n        categorys(\"A\")\r\n        categoryys(\"A\")\r\n        console.log(category)\r\n    }\r\n\r\n    async function B() {\r\n        categorys(\"B\")\r\n        categoryys(\"B\")\r\n        console.log(category)\r\n    }\r\n\r\n    async function C() {\r\n        categorys(\"C\")\r\n        categoryys(\"C\")\r\n        console.log(category)\r\n    }\r\n    // Заполнение данных регистрации транспортного средства\r\n    async function Entry_transport() {\r\n        if (categoryy == i) {\r\n            try {\r\n                await Contract.methods.Entry_transport(categoryy, price, srok).send({ from: web3.eth.defaultAccount, gas: 1000000 })\r\n                tr_(0)\r\n\r\n                Length_massge_client(value_acc)\r\n                Length_transport(value_acc)\r\n                categoryys(\"\"); prices(\"\"); sroks(\"\");\r\n            } catch { alert('Ошибка, не верно заполненны данные!') }\r\n        } else { alert('Ошибка, не верно заполненны данные!') }\r\n    }\r\n\r\n    // Продление водительского удостоверения\r\n    async function Extension_ID_card() {\r\n        console.log(web3.eth.defaultAccount, \"\")\r\n\r\n        if (g == 1) {\r\n            try {\r\n                await Contract.methods.Extension_ID_card().send({ from: web3.eth.defaultAccount, gas: 1000000 })\r\n                lencth_dps()\r\n                alert('Запрос на продление водительского удостоверения был отправлен, ожидайте ответа!')\r\n            } catch { }\r\n        }\r\n        else { alert('Ошиба, данные водительского удостоверения не заполнены!') }\r\n    }\r\n\r\n    // Обработка запроса клиента для ДПС\r\n    async function Processing_DPS(answ) {\r\n        console.log(web3.eth.defaultAccount, \"\")\r\n\r\n        if (r2 == 0) {\r\n            try {\r\n                await Contract.methods.Processing_DPS(answ, _number_).send({ from: web3.eth.defaultAccount })\r\n                console.log(\"Успешно!\")\r\n                await Info_ID_card(value_acc)\r\n                await Length_massge_client(value_acc)\r\n                await Info_message_DPS(value_acc)\r\n                alert('Сообщение отправлено!');\r\n            } catch(e) { \r\n                console.log(e)\r\n                alert('Ошибка!'); }\r\n        }\r\n        else alert('Ошибка, сообщение было отправлено!');\r\n\r\n    }\r\n\r\n    async function yee() {\r\n        Processing_DPS(\"Подтверждено\")\r\n    }\r\n\r\n    async function noo() {\r\n        Processing_DPS(\"Отклонено\")\r\n    }\r\n\r\n    // Информация о водительском удостоверении\r\n    async function Info_ID_card(adr) {\r\n        try {\r\n            var result = await Contract.methods.Length_card().call()\r\n            var n;\r\n            for (var i = 0; i < result; i++) {\r\n                let id_result = await Contract.methods.Info_ID_card(i).call()\r\n                if (id_result[5] == adr) {\r\n                    n = i\r\n                }\r\n            }\r\n            let id_result = await Contract.methods.Info_ID_card(n).call()\r\n            a1(id_result[0])\r\n            b1(id_result[1])\r\n            c1(id_result[2])\r\n            d1(id_result[3])\r\n            i1(id_result[4])\r\n            g1(1)\r\n        } catch {\r\n            console.log(\"987654\");\r\n            g1(0)\r\n        }\r\n    }\r\n\r\n    // Информация о пользователе\r\n    async function Info_users(adr) {\r\n        var result = await Contract.methods.Length_user().call()\r\n        var n;\r\n        for (var i = 0; i < result; i++) {\r\n            let id_result = await Contract.methods.Info_users(i).call()\r\n            if (id_result[4] == adr) {\r\n                n = i\r\n            }\r\n        }\r\n        let id = await Contract.methods.Info_users(n).call()\r\n        a2(id[0])\r\n        b2(id[1])\r\n        c2(id[2])\r\n        d2(id[3])\r\n    }\r\n\r\n    // Информация о транспорте\r\n    async function Info_transport() {\r\n        try {\r\n            var re = await Contract.methods.Length_new_transport().call()\r\n            var n;\r\n            for (var i = 0; i < re; i++) {\r\n                let id_result = await Contract.methods.Info_transport(i).call()\r\n                if (id_result[4] == value_acc && id_result[3] == _number) {\r\n                    n = i\r\n                }\r\n            }\r\n            let id = await Contract.methods.Info_transport(n).call()\r\n            a3(id[0])\r\n            b3(id[1])\r\n            c3(id[2])\r\n        } catch { alert('Ошибка, данные не заполнены!') }\r\n    }\r\n\r\n    // Сообщения ДПС\r\n    async function Info_message_DPS() {\r\n        try {\r\n            let id_result = await Contract.methods.Info_message_DPS(_number_).call()\r\n            texts2(id_result[0])\r\n            numbers(id_result[1])\r\n            days(id_result[2])\r\n            months(id_result[3])\r\n            years(id_result[4])\r\n            categorys(id_result[5])\r\n            r1(id_result[6])\r\n            var a = id_result[3]\r\n            var d = new Date(a * 1000),\r\n                yyyy = d.getFullYear(),\r\n                mm = ('0' + (d.getMonth() + 1)).slice(-2),\r\n                dd = ('0' + d.getDate()).slice(-2),\r\n                hh = d.getHours(),\r\n                h = hh,\r\n                min = ('0' + d.getMinutes()).slice(-2),\r\n                time;\r\n\r\n            time = dd + '.' + mm + '.' + yyyy + ' ' + + h + ':' + min;\r\n            if (id_result[6] == 'Ожидает ответа') {\r\n                r22(0)\r\n            } else r22(1)\r\n        } catch { alert('Error!') }\r\n    }\r\n\r\n    // Сообщения клиент\r\n    async function Info_message_client() {\r\n        try {\r\n            var res = await Contract.methods.Length_new_massge_client().call()\r\n            for (var i = 0; i < res; i++) {\r\n                let id_result = await Contract.methods.Info_message_client(i).call()\r\n                if (id_result[1] == value_acc && id_result[2] == number_) {\r\n                    texts(id_result[0])\r\n                    var a = id_result[3]\r\n                    var d = new Date(a * 1000),\r\n                        yyyy = d.getFullYear(),\r\n                        mm = ('0' + (d.getMonth() + 1)).slice(-2),\r\n                        dd = ('0' + d.getDate()).slice(-2),\r\n                        hh = d.getHours(),\r\n                        h = hh,\r\n                        min = ('0' + d.getMinutes()).slice(-2),\r\n                        time;\r\n\r\n                    time = dd + '.' + mm + '.' + yyyy + ' ' + + h + ':' + min;\r\n\r\n                    DAT2(time)\r\n                    console.log(id_result[0])\r\n                }\r\n            }\r\n        } catch { alert('Error!') }\r\n    }\r\n\r\n    async function lencth_dps() {\r\n        let id_result = await Contract.methods.Length_massge_DPS().call()\r\n        l_dpss(id_result)\r\n    }\r\n\r\n    async function Length_massge_client(adr) {\r\n        var res = await Contract.methods.Length_new_massge_client().call()\r\n        var n = 0;\r\n        for (var i = 0; i < res; i++) {\r\n            let id_result = await Contract.methods.Info_message_client(i).call()\r\n            console.log(id_result[i])\r\n            if (id_result[1] == adr) {\r\n                n++\r\n            }\r\n        }\r\n        resultss(n)\r\n    }\r\n\r\n    async function Length_transport(adr) {\r\n        var res = await Contract.methods.Length_new_transport().call()\r\n        var n = 0;\r\n        for (var i = 0; i < res; i++) {\r\n            let id_result = await Contract.methods.Info_transport(i).call()\r\n            console.log(id_result[4])\r\n            if (id_result[4] == adr) {\r\n                n++\r\n            }\r\n        }\r\n        console.log(n)\r\n        result(n)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {(zo !== 0) && (ro !== 1) && (tr !== 1) && <div>\r\n                <Link style={{ marginLeft: \"20px\" }} to=\"./help\" >\r\n                    <li className=\"button2\">\r\n                        Помощь\r\n                    </li>\r\n                </Link >\r\n                <div style={{ color: \"#688cc2\" }}><center><h2> ВХОД </h2></center></div>\r\n                <center>\r\n                    <label>Логин </label>\r\n                    <input type=\"text\" value={log} onChange={e => logs(e.target.value)} /><br />\r\n                    <label>Пароль </label>\r\n                    <input type=\"text\" id=\"userPassword\" type=\"password\" value={password} onChange={e => passwords(e.target.value)} /><br />\r\n                    <br /><button className=\"button\" onClick={Activation}>Войти в личный кабинет</button>\r\n                    <br /><br /><div style={{ color: \"#688cc2\" }}><label>______________Нет профиля в ГИБДД______________</label></div><br />\r\n                    <Link to=\"./mem\" >\r\n                        <li className=\"button\">\r\n                            Зарегистрироваться\r\n                            </li>\r\n                    </Link >\r\n                </center>\r\n                <br/><br/><center><div style={{ color: \"#688cc2\", fontSize: \"20px\" }}><label >Разработчик: Склярова Милена Владимировна<br/> ГБПОУ РО \"ТКМП\"</label></div></center>\r\n            </div>}\r\n\r\n\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && <div style={{ float: \"right\", marginRight: \"20px\" }}><br /><button className=\"button2\" href='#' onClick={() => exet()}><img src={vhod} width=\"50\" alt=\"\" /></button></div>}\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && <div style={{ color: \"#688cc2\" }}><br /><br /><center><h2 >Мой личный кабинет</h2></center><br /></div>}\r\n\r\n\r\n            {(zo === 0) && (tr !== 1) && (ro !== 1) && <div style={{ float: \"right\", marginRight: \"20px\" }}>\r\n                <br />\r\n                <leble>Кол-во</leble>\r\n                <leble> </leble>{results}<leble> </leble>\r\n                <button className=\"button\" href='#' onClick={() => Info_message_client()}>Просмотр <img src={icon} width=\"25\" alt=\"\" /></button>\r\n                <leble> </leble><input type=\"text\" placeholder=\"номер сообщения по порядку\" value={number_} onChange={e => number5(e.target.value)} /><br />\r\n                <p style={{ color: \"#000000\" }}>{text}<br />{DAT}</p>\r\n            </div>}\r\n\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && <div style={{ marginLeft: \"20px\" }}>\r\n                <div style={{ color: \"#688cc2\" }}><h3 >Личные данные пользователя:</h3></div>\r\n                <p>\r\n                    ФИО<leble> </leble>{String(a_)} {String(b_)} {String(c_)}<br />\r\n                        Стаж<leble> </leble>{d_}<br />\r\n                </p>\r\n            </div>}\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && (hh === 0) && <p style={{ float: \"right\", marginRight: \"1105px\" }}><button className=\"button2\" href='#' onClick={() => rasv1()}><img src={razv} width=\"50\" alt=\"\" /></button></p>}\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && (hh === 1) && <p style={{ float: \"right\", marginRight: \"1100px\" }}><button className=\"button2\" href='#' onClick={() => sv1()}><img src={sver} width=\"50\" alt=\"\" /></button></p>}\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && <p style={{ marginLeft: \"20px\", color: \"#688cc2\" }}>\r\n                <h3>Данные водительского удостоверения:</h3>\r\n            </p>}\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && (hh === 1) && <div style={{ marginLeft: \"20px\" }}>\r\n                <p>\r\n                    <button className=\"button\" href='#' onClick={() => exet2()}>Заполнить данные</button>\r\n                    <leble> </leble><button className=\"button\" href='#' onClick={() => Extension_ID_card()}>Продлить</button><br /><br />\r\n                    Номер<leble> </leble>{a}<br />\r\n                    Срок действия<leble> </leble>{b}<leble>.</leble>{c}<leble>.</leble>{d}<leble> г.</leble><br />\r\n                    Категория<leble> </leble>{i}<br />\r\n                </p>\r\n            </div>}\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && (hh2 === 0) && <div style={{ float: \"right\", marginRight: \"1210px\" }}><button className=\"button2\" href='#' onClick={() => rasv2()}><img src={razv} width=\"50\" alt=\"\" /></button></div>}\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && (hh2 === 1) && <div style={{ float: \"right\", marginRight: \"1210px\" }}><button className=\"button2\" href='#' onClick={() => sv2()}><img src={sver} width=\"50\" alt=\"\" /></button></div>}\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && <div style={{ marginLeft: \"20px\", color: \"#688cc2\" }}>\r\n                <h3>Данные транспортного средства:</h3>\r\n            </div>}\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr !== 1) && (hh2 === 1) && <div style={{ marginLeft: \"20px\" }}>\r\n                <p>\r\n                    <button className=\"button\" href='#' onClick={() => exet4()}>Регистрация</button><br /><br />\r\n                    <leble>Кол-во</leble><leble> </leble>{resul}<leble> </leble>\r\n                    <button className=\"button\" href='#' onClick={() => Info_transport()}>Просмотр</button><leble> </leble>\r\n                    <input type=\"text\" placeholder=\"номер транспорта по порядку\" value={_number} onChange={e => number3(e.target.value)} /><br /><br />\r\n                    Категория<leble> </leble>{_a}<br />\r\n                    Рыночная стоимость<leble> </leble>{_b}<br />\r\n                    Срок эксплуатации<leble> </leble>{_c}\r\n                </p>\r\n            </div>}\r\n\r\n            {(ro === 1) && <div style={{ float: \"right\", marginRight: \"20px\" }}><br />\r\n                <button className=\"button2\" href='#' onClick={() => exet3()}><img src={nazad} width=\"60\" alt=\"\" /></button></div>}\r\n            {(ro === 1) && <div style={{ color: \"#688cc2\" }}><br /><br /><center><h3>ЗАПОЛНЕНИЕ ДАННЫХ<br />ВОДИТЕЛЬСКОГО УДОСТОВЕРЕНИЯ</h3></center></div>}\r\n            {(ro === 1) && <div style={{ marginLeft: \"750px\" }}>\r\n                <p>\r\n                    Номер<br /><input type=\"text\" placeholder=\"от 000 до 999\" value={number} onChange={e => numberr(e.target.value)} /><br />\r\n                    День<br /><input type=\"text\" value={day} onChange={e => days(e.target.value)} /><br />\r\n                    Месяц<br /><input type=\"text\" value={month} onChange={e => months(e.target.value)} /><br />\r\n                    Год<br /><input type=\"text\" value={year} onChange={e => years(e.target.value)} /><br />\r\n                    Категория<br />\r\n                    <button className=\"btn\" href='#' onClick={() => A()}>A</button><leble> </leble>\r\n                    <button className=\"btn\" href='#' onClick={() => B()}>B</button><leble> </leble>\r\n                    <button className=\"btn\" href='#' onClick={() => C()}>C</button><leble> </leble>\r\n                    <br /><br />\r\n                    <button className=\"button\" href='#' onClick={() => Entry_ID_card()}>Сохранить изменения</button><leble></leble>\r\n                </p>\r\n            </div>}\r\n\r\n\r\n            {(zo === 0) && (ro !== 1) && (tr === 1) && <div style={{ float: \"right\", marginRight: \"20px\" }}><br />\r\n                <button className=\"button2\" href='#' onClick={() => exet5()}><img src={nazad} width=\"60\" alt=\"\" /></button></div>}\r\n            {(zo === 0) && (ro !== 1) && (tr === 1) && <div style={{ color: \"#688cc2\" }}><br /><br /><center><h2>Регистрация транспортного <br />средства</h2></center></div>}\r\n            {(zo === 0) && (ro !== 1) && (tr === 1) && <div style={{ marginLeft: \"750px\" }}>\r\n                <p>\r\n                    Категория<br />\r\n                    <button className=\"btn\" href='#' onClick={() => A()}>A</button><leble> </leble>\r\n                    <button className=\"btn\" href='#' onClick={() => B()}>B</button><leble> </leble>\r\n                    <button className=\"btn\" href='#' onClick={() => C()}>C</button><leble> </leble> <br />\r\n                    Рыночная стоимость<br /><input type=\"text\" value={price} onChange={e => prices(e.target.value)} /><br />\r\n                    Срок эксплуатации<br /><input type=\"text\" placeholder=\"Кол-во лет\" value={srok} onChange={e => sroks(e.target.value)} /><br /><br />\r\n                    <button className=\"button\" href='#' onClick={() => Entry_transport()}>Сохранить изменения</button><leble></leble>\r\n                </p>\r\n            </div>}\r\n\r\n            <br />\r\n            {(mo === 0) && (zo === 0) && (ro !== 1) && (tr !== 1) && (hh3 === 0) && <p style={{ float: \"right\", marginRight: \"1050px\" }}><div /><br /><button className=\"button2\" href='#' onClick={() => rasv3()}><img src={razv} width=\"50\" alt=\"\" /></button></p>}\r\n            {(mo === 0) && (zo === 0) && (ro !== 1) && (tr !== 1) && (hh3 === 1) && <p style={{ float: \"right\", marginRight: \"1050px\" }}><br /><button className=\"button2\" href='#' onClick={() => sv3()}><img src={sver} width=\"50\" alt=\"\" /></button></p>}\r\n\r\n            {(mo === 0) && (zo === 0) && (ro !== 1) && (tr !== 1) && <p style={{ marginLeft: \"20px\", color: \"#688cc2\" }}>\r\n                <h3>Продление водительских удостоверений:</h3>\r\n            </p>}\r\n\r\n            {(mo === 0) && (zo === 0) && (ro !== 1) && (tr !== 1) && (hh3 === 1) && <div style={{ marginLeft: \"20px\" }}>\r\n                <p>\r\n                    <leble>Кол-во</leble>\r\n                    <leble> </leble>{l_dps}<leble> </leble>\r\n                    <button className=\"button\" href='#' onClick={() => Info_message_DPS()}>Просмотр <img src={icon} width=\"25\" alt=\"\" /></button>\r\n                    <leble> </leble><input type=\"text\" placeholder=\"номер сообщения по порядку\" value={_number_} onChange={e => number4(e.target.value)} /><br /><br />\r\n                    <div style={{ color: \"#000000\" }}>\r\n                        {text2}<br />\r\n                        Номер<leble> </leble>{numberi}<br />\r\n                        Срок действия<leble> </leble>{day}<leble>.</leble>{month}<leble>.</leble>{year}<leble> г.</leble><br />\r\n                        Категория<leble> </leble>{category}\r\n                    </div>\r\n                    {(r2 == 0) && <div style={{ float: \"right\", marginRight: \"1150px\", color: \"#D11818\" }}> {r}</div>}\r\n                    {(r2 == 1) && <div style={{ float: \"right\", marginRight: \"1150px\", color: \"#2FBB2F\" }}> {r}</div>}\r\n                    <br /><br />\r\n                    <button className=\"button\" href='#' onClick={() => yee()}>Подтвердить</button><leble> </leble>\r\n                    <button className=\"button\" href='#' onClick={() => noo()}>Отклонить</button>\r\n                </p>\r\n            </div>}\r\n                \r\n        </>\r\n    )\r\n}\r\nexport default Main\r\n","C:\\moon\\moon2\\test-app\\src\\Contract\\UserList.js",[],"C:\\moon\\moon2\\test-app\\src\\router.js",[],"C:\\moon\\moon2\\test-app\\src\\pages\\mem.js",["71","72","73","74","75","76","77","78"],"import React, { useState} from 'react'\r\nimport { UseContext } from '../Contract/Context'\r\nimport {Link} from 'react-router-dom'\r\nimport nazad from '../nazad.svg'\r\n\r\nconst Mai =()=> {\r\n    const { web3, Contract } = UseContext()// глобальные переменные\r\n    const [owner, Owner] = useState('')\r\n    const [pass, passw] = useState('')\r\n    let [password, passwords] = useState('')// Пароль\r\n    let [password2, passwords2] = useState('')// Пароль\r\n    const [last_name, last_names] = useState('')// Фамилия\r\n    const [name, names] = useState('')// Имя\r\n    const [patronymic, patronymics] = useState('')// Отчество\r\n    const [role, roles] = useState('')// Роль\r\n    const [expertise, expertises] = useState('')// Стаж\r\n    const [login, logins] = useState('')\r\n\r\n    // Регистрация !!!\r\n    async function Registration() {\r\n        if (password == password2){\r\n                setTimeout(async()=>{\r\n                let a = await web3.eth.personal.newAccount(password)\r\n                await web3.eth.personal.unlockAccount(\"0x9d295D22246a1fddf9E52f493721d2C8696284fD\", \"0000\").then(console.log)\r\n                console.log(a)\r\n                await web3.eth.sendTransaction({from: \"0x9d295D22246a1fddf9E52f493721d2C8696284fD\", to: a,  value: \"50000000000000000000\"})\r\n                await web3.eth.personal.unlockAccount(a,password)\r\n\r\n                    await Contract.methods.Registration(last_name, name, patronymic, \"client\",expertise, login).send({ from:a }).then(console.log)\r\n                    last_names(\"\"); names(\"\"); patronymics(\"\"); roles(\"\"); expertises(\"\"); passwords(\"\"); passwords2(\"\"); logins(\"\")\r\n                    alert(\"Регистрация прошла успешно!\")\r\n                })\r\n            \r\n        }else{alert('Ошибка, пароли не совпадают!');}\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <br/>\r\n        {<div style={{ float: \"right\", marginRight: \"20px\" }}><Link to=\"./Main\" ><li className=\"button2\"><img src={nazad} width=\"60\" alt=\"\"/></li></Link ></div>}<br/>\r\n\r\n        <div style={{ color: \"#688cc2\" }}><center><h2>РЕГИСТРАЦИЯ</h2></center></div>\r\n\r\n        {<div style={{ marginLeft: \"780px\" }}>\r\n                <p>\r\n                    <lable > Фамилия</lable><br />\r\n                    <input type=\"text\" value={last_name} onChange={e => last_names(e.target.value)} /><br />\r\n                    <lable>Имя</lable><br />\r\n                    <input type=\"text\" value={name} onChange={e => names(e.target.value)} /><br />\r\n                    <lable>Отчество</lable><br />\r\n                    <input type=\"text\" value={patronymic} onChange={e => patronymics(e.target.value)} /><br />\r\n                    <lable>Стаж</lable><br />\r\n                    <input type=\"text\" placeholder=\"Кол-во лет\" value={expertise} onChange={e => expertises(e.target.value)} /><br />\r\n                    <label>Логин </label><br/>\r\n                    <input type=\"text\" value={login} onChange={e => logins(e.target.value)} /><br />\r\n                    <label>Пароль </label><br/>\r\n                    <input type=\"text\" id=\"password-input\" type=\"password\" value={password} onChange={e => passwords(e.target.value)} /><br />\r\n                    <label>Подтверждение пароля </label><br/>\r\n                    <input type=\"text\" id=\"userPassword\" type=\"password\" placeholder=\"Повторно введите пароль\" value={password2} onChange={e => passwords2(e.target.value)} /><br />\r\n                    <br/><button className=\"button\" href='#' onClick={() => Registration()}>Зарегистрироваться</button><br />\r\n                </p>\r\n        </div>}\r\n\r\n        \r\n\r\n        </>)\r\n}\r\nexport default Mai","C:\\moon\\moon2\\test-app\\src\\Contract\\Context.js",[],"C:\\moon\\moon2\\test-app\\src\\pages\\help.js",["79","80"],"import React, { useState} from 'react'\r\nimport { UseContext } from '../Contract/Context'\r\nimport {Link} from 'react-router-dom'\r\nimport nazad from '../nazad.svg'\r\n\r\nconst Help =()=> {   \r\n    \r\n    \r\n    return (\r\n    <>       \r\n    {<div style={{ float: \"right\", marginRight: \"20px\" }}><Link to=\"./Main\" ><li className=\"button2\"><img src={nazad} width=\"60\" alt=\"\"/></li></Link ></div>}<br/>\r\n\r\n    <center><h3>Руководство пользователя</h3></center><br/>\r\n\r\n    <div style={{Left: \"float\", marginLeft: \"100px\", marginRight: \"100px\"}}>\r\n        <h4>Авторизация:</h4>\r\n        Для успешной авторизации необходимо заполнить следующие поля на главной странице \"Вход\" (\"Авторизация\"):<br/><br/>\r\n        - Логин - вводится от личного кабинета, содержащий в себе символы A-Z, 0-9;<br/>\r\n        - Пароль - вводится от личного кабинета, содержащий в себе символы A-Z, 0-9.<br/>\r\n        <h4>Регистрация:</h4>\r\n        Для возможности регистрации транспортного средтва, необходимо перейти в раздел \"Регистрация\", предварительно кликнув по кнопке \"Регистрация\" на главной стрнице \"Вход\" (\"Авторизация\"). \r\n        При регистрации заполняются следующие поля:<br/><br/>\r\n        - Фамилия;<br/>\r\n        - Имя;<br/>\r\n        - Отчество;<br/>\r\n        - Стаж - кол–во лет, считаемые после получения прав по вождению;<br/>\r\n        - Логин - может содержать в себе символы A-Z, 0-9;<br/>\r\n        - Пароль - может содержать в себе символы A-Z, 0-9;<br/>\r\n        - Подтверждение пароля - повторите ранее введённый пароль.\r\n        <h4>Заполнение данных водительского удостоверения:</h4>\r\n        Для заполнения данных водительского удостоверения необходимо перейти в раздел \"Данные водительского удостоверения\" расположенный в личном кабинете пользователя. \r\n        При вводе данных водительского удостоверения, заполняются следующие поля:<br/><br/>\r\n        - номер - введите номер своего водительского удостоверения;<br/>\r\n        - Введите дату срока окончания водительского удостоверения:<br/>\r\n        * день;<br/>\r\n        * месяц;<br/>\r\n        * год.<br/>\r\n        - категория - введите категорию вашего транспортного средства, A/B/C из водительского удостоверения.\r\n        <h4>Регистрация транспортного средства:</h4>\r\n        Для регистрации транспортного средства необходимо перейти в раздел \"Данные транспортного средства\" расположенный в личном кабинете пользователя. \r\n        При регистрации транспортного средства заполняются следующие поля:<br/><br/>\r\n        - категория - введите категорию вашего транспортного средства A/B/C, важно чтобы категория транспортного <br/>\r\n        средтва совпадала с категорией водительского удостоверения;<br/>\r\n        - рыночная стоимость - введите стоимость регистрируемого вами транспортного средства;<br/>\r\n        - срок эксплуатации - введите количество лет эксплуатации транспортного средства.<br/>\r\n        <h4>Просмотр личных сообщений:</h4>\r\n        Для просмотра личных сообщений необходимо перейти в свой кабинет, на главную страницу. Просмотр личных сообщений расположен справа.<br/><br/>\r\n        – просмотр личных сообщений – осуществляется при вводе номера сообщения по порядку начиная с 1 по n.\r\n        <h4>Продление водительского удостоверения со стороны клиента:</h4>\r\n        При продлении водительского удостоверения необходимо кликнуть по кнопку расположенной в разделе \"Данные водительского удостоверения\":<br/><br/>\r\n        -  продление - при клике по кнопке «Продлить» сотруднику ДПС отправляется запрос от клиента.\r\n        <h4>Продление водительского удостоверения со стороны сотрудника ДПС:</h4>\r\n        Для ответа на запрос по продлению водительского удостоверения необходимо перейти в раздел \"Продление водительских удостоверений\" расположенный в личном кабинете сотрудника ДПС. \r\n        При ответе на запрос, заполняются следующие поля:<br/><br/>\r\n        – просмотр запросов – осуществляется при вводе номера запроса по порядку начиная с 1 по n;<br/>\r\n        - кликнуть по кнопке из предоставленных:<br/>\r\n        * Подтвердить – нажимаем на кнопку для согласия на продление водительского удостоверения;<br/>\r\n        * Отклонить – нажимаем на кнопку для отказа на продление водительского удостоверения.<br/><br/><br/><br/>\r\n        <center><div style={{ color: \"#fffff\", fontSize: \"20px\" }}><label >Разработчик: Склярова Милена Владимировна<br/> ГБПОУ РО \"ТКМП\"</label></div></center><br/><br/>\r\n            \r\n    </div>\r\n    </>)\r\n}\r\nexport default Help",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"91","line":5,"column":16,"nodeType":"89","messageId":"90","endLine":5,"endColumn":26},{"ruleId":"87","severity":1,"message":"92","line":24,"column":12,"nodeType":"89","messageId":"90","endLine":24,"endColumn":18},{"ruleId":"87","severity":1,"message":"93","line":24,"column":20,"nodeType":"89","messageId":"90","endLine":24,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":74,"column":34,"nodeType":"96","messageId":"97","endLine":74,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":79,"column":23,"nodeType":"96","messageId":"97","endLine":79,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":82,"column":21,"nodeType":"96","messageId":"97","endLine":82,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":82,"column":33,"nodeType":"96","messageId":"97","endLine":82,"endColumn":35},{"ruleId":"94","severity":1,"message":"95","line":183,"column":23,"nodeType":"96","messageId":"97","endLine":183,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":199,"column":15,"nodeType":"96","messageId":"97","endLine":199,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":213,"column":16,"nodeType":"96","messageId":"97","endLine":213,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":244,"column":34,"nodeType":"96","messageId":"97","endLine":244,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":267,"column":30,"nodeType":"96","messageId":"97","endLine":267,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":285,"column":34,"nodeType":"96","messageId":"97","endLine":285,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":285,"column":63,"nodeType":"96","messageId":"97","endLine":285,"endColumn":65},{"ruleId":"87","severity":1,"message":"98","line":317,"column":13,"nodeType":"89","messageId":"90","endLine":317,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":318,"column":30,"nodeType":"96","messageId":"97","endLine":318,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":330,"column":34,"nodeType":"96","messageId":"97","endLine":330,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":330,"column":63,"nodeType":"96","messageId":"97","endLine":330,"endColumn":65},{"ruleId":"94","severity":1,"message":"95","line":362,"column":30,"nodeType":"96","messageId":"97","endLine":362,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":375,"column":30,"nodeType":"96","messageId":"97","endLine":375,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":396,"column":58,"nodeType":"101","endLine":396,"endColumn":73},{"ruleId":"94","severity":1,"message":"95","line":523,"column":26,"nodeType":"96","messageId":"97","endLine":523,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":524,"column":26,"nodeType":"96","messageId":"97","endLine":524,"endColumn":28},{"ruleId":"87","severity":1,"message":"102","line":8,"column":12,"nodeType":"89","messageId":"90","endLine":8,"endColumn":17},{"ruleId":"87","severity":1,"message":"103","line":8,"column":19,"nodeType":"89","messageId":"90","endLine":8,"endColumn":24},{"ruleId":"87","severity":1,"message":"104","line":9,"column":12,"nodeType":"89","messageId":"90","endLine":9,"endColumn":16},{"ruleId":"87","severity":1,"message":"105","line":9,"column":18,"nodeType":"89","messageId":"90","endLine":9,"endColumn":23},{"ruleId":"87","severity":1,"message":"106","line":15,"column":12,"nodeType":"89","messageId":"90","endLine":15,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":21,"column":22,"nodeType":"96","messageId":"97","endLine":21,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":57,"column":60,"nodeType":"101","endLine":57,"endColumn":75},{"ruleId":"99","severity":1,"message":"100","line":59,"column":58,"nodeType":"101","endLine":59,"endColumn":73},{"ruleId":"87","severity":1,"message":"107","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"108","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":20},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'answer' is assigned a value but never used.","'answers' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'time' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'owner' is assigned a value but never used.","'Owner' is assigned a value but never used.","'pass' is assigned a value but never used.","'passw' is assigned a value but never used.","'role' is assigned a value but never used.","'useState' is defined but never used.","'UseContext' is defined but never used.","no-global-assign","no-unsafe-negation"]